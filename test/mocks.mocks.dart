// Mocks generated by Mockito 5.4.4 from annotations
// in riverpod_files/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:kortobaa_core_package/kortobaa_core_package.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:riverpod_files/blocs/interfaces/products_interface.dart' as _i4;
import 'package:riverpod_files/blocs/models/login_models/login_request_body.dart'
    as _i9;
import 'package:riverpod_files/blocs/models/login_models/login_response.dart'
    as _i8;
import 'package:riverpod_files/blocs/models/products_model/product_response.dart'
    as _i2;
import 'package:riverpod_files/blocs/repos/login_repo/login_repo.dart' as _i7;
import 'package:riverpod_files/networking/api/api_result.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeProductResponse_0 extends _i1.SmartFake
    implements _i2.ProductResponse {
  _FakeProductResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResult_1<T> extends _i1.SmartFake implements _i3.ApiResult<T> {
  _FakeApiResult_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [IProductsApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockIProductsApi extends _i1.Mock implements _i4.IProductsApi {
  MockIProductsApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ProductResponse> getProducts(
    int? skip,
    int? limit,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [
            skip,
            limit,
          ],
        ),
        returnValue:
            _i5.Future<_i2.ProductResponse>.value(_FakeProductResponse_0(
          this,
          Invocation.method(
            #getProducts,
            [
              skip,
              limit,
            ],
          ),
        )),
      ) as _i5.Future<_i2.ProductResponse>);
}

/// A class which mocks [IPageErrorHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPageErrorHandler extends _i1.Mock implements _i6.IPageErrorHandler {
  MockIPageErrorHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isSupported(Exception? error) => (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [error],
        ),
        returnValue: false,
      ) as bool);

  @override
  void handle(Exception? error) => super.noSuchMethod(
        Invocation.method(
          #handle,
          [error],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [IPageSuccessHandler].
///
/// See the documentation for Mockito's code generation for more information.
class MockIPageSuccessHandler extends _i1.Mock
    implements _i6.IPageSuccessHandler {
  MockIPageSuccessHandler() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool isSupported(dynamic object) => (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void handle(dynamic result) => super.noSuchMethod(
        Invocation.method(
          #handle,
          [result],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SimpleSecureData].
///
/// See the documentation for Mockito's code generation for more information.
class MockSimpleSecureData extends _i1.Mock implements _i6.SimpleSecureData {
  MockSimpleSecureData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FutureOr<bool> delete(String? key) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.FutureOr<bool>);

  @override
  _i5.Future<String?> readString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readString,
          [key],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<int?> readInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readInt,
          [key],
        ),
        returnValue: _i5.Future<int?>.value(),
      ) as _i5.Future<int?>);

  @override
  _i5.Future<bool?> readBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readBool,
          [key],
        ),
        returnValue: _i5.Future<bool?>.value(),
      ) as _i5.Future<bool?>);

  @override
  _i5.Future<Map<String, dynamic>?> readJsonMap(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #readJsonMap,
          [key],
        ),
        returnValue: _i5.Future<Map<String, dynamic>?>.value(),
      ) as _i5.Future<Map<String, dynamic>?>);

  @override
  _i5.FutureOr<bool> writeBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.FutureOr<bool>);

  @override
  _i5.FutureOr<bool> writeInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.FutureOr<bool>);

  @override
  _i5.FutureOr<bool> writeString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.FutureOr<bool>);

  @override
  _i5.FutureOr<bool> writeJsonMap(
    String? key,
    Map<String, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeJsonMap,
          [
            key,
            value,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.FutureOr<bool>);

  @override
  _i5.Future<bool> containKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containKey,
          [key],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
}

/// A class which mocks [LoginRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginRepo extends _i1.Mock implements _i7.LoginRepo {
  MockLoginRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.ApiResult<_i8.LoginResponse>> login(
          _i9.LoginRequestBody? loginRequestBody) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [loginRequestBody],
        ),
        returnValue: _i5.Future<_i3.ApiResult<_i8.LoginResponse>>.value(
            _FakeApiResult_1<_i8.LoginResponse>(
          this,
          Invocation.method(
            #login,
            [loginRequestBody],
          ),
        )),
      ) as _i5.Future<_i3.ApiResult<_i8.LoginResponse>>);
}
